<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

  <link rel="stylesheet" href="/buy.css" />
  <title>Movie Seat Booking</title>
</head>

<body>

  <h1>
    <%= movie.title %>
  </h1>
  <ul class="showcase">
    <li>
      <div class="seat"></div>
      <small>N/A</small>
    </li>
    <li>
      <div class="seat selected"></div>
      <small>Selected</small>
    </li>
    <li>
      <div class="seat occupied"></div>
      <small>Occupied</small>
    </li>
  </ul>

  <div class="container">
    <div class="screen"></div>

    <div class="seat-container">

    </div>
  </div>

  <p>Price: <span id="price">
      <%= schedule.price %>
    </span></p>
  <p class="text">
    You have selected <span id="count">0</span> seats for a price of PHP <span id="total">0</span>
  </p>

  <button type="button" id="buy" class="btn btn-primary" data-toggle="modal" data-target="#buyModal">
    Buy
  </button>

  <h2 id="sold-out"></h2>
  <div id="buyModal" class="modal fade">
    <div class="modal-dialog">

      <div class="modal-content p-5">


        <table class="table table-striped ">
          <thead>
            <tr>
              <th scope="col">Email</th>
              <th scope="col">Movie</th>
              <th scope="col">Qty</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id='email'>
                <%= user.email %>
              </td>
              <td>
                <%= movie.title %>
              </td>
              <td id='qty'>@mdo</td>
            </tr>
            <tr>
              <td colspan="3">
                <h5>Total Price: <span id="total-price"></span></h5>
              </td>
            </tr>
          </tbody>
        </table>
        <div id="paypal-button"></div>

      </div>
    </div>
  </div>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://www.paypalobjects.com/api/checkout.js"></script>

  <script>
    const container = document.querySelector('.container')
    const seats = document.querySelectorAll('.row .seat:not(.occupied)')
    const count = document.getElementById('count')
    const total = document.getElementById('total')
    const totalPrice = document.getElementById('total-price')
    const form = document.getElementById('buy')
    const qty = document.getElementById('qty')
    const seatContainer = document.querySelector('.seat-container')
    const id = window.location.pathname.replace('/buy/', '')
    const email = document.getElementById('email').innerText.trim()
    let totalAmount = 0;
    let buyingSeats = []
    form.disabled = true

    let ticketPrice = +document.getElementById('price').innerText

    function updateSelectedCount() {
      const selectedSeats = document.querySelectorAll('.row .seat.selected')

      const seatsIndex = [...selectedSeats].map((seat) => [...seats].indexOf(seat))

      const selectedSeatsCount = selectedSeats.length

      count.innerText = selectedSeatsCount
      qty.innerText = selectedSeatsCount
      total.innerText = selectedSeatsCount * ticketPrice
      totalPrice.innerText = selectedSeatsCount * ticketPrice

      totalAmount = selectedSeatsCount * ticketPrice

      if (selectedSeatsCount > 0) {
        form.disabled = false
      } else {
        form.disabled = true
      }
    }



    // Seat Click Event
    container.addEventListener('click', (e) => {
      if (
        e.target.classList.contains('seat') &&
        !e.target.classList.contains('occupied')
      ) {
        e.target.classList.toggle('selected')

        updateSelectedCount()
      }
    })

    form.addEventListener('click', () => {
      const selectedSeats = document.querySelectorAll('.row .seat.selected')
      let seats = []
      selectedSeats.forEach((seat) => {

        seats.push(seat.id)
      })
      buyingSeats = seats
    })

    updateSelectedCount()



    async function getSchedule() {
      try {

        const res = await fetch('/schedule/' + id, {
          method: 'get'
        });

        const { schedule } = await res.json()

        seatContainer.innerHTML = schedule.seats
          .map((row) => {
            let seats = ''
            row.map((seat) => {
              seats += `<div class="${seat.taken ? 'seat occupied' : 'seat'}" id="${seat.name
                }"></div>`
            })
            return `<div class="row">
  ${seats}
  </div>`
          })
          .join('')

        const occupied = document.querySelectorAll('.row .seat.occupied')
        console.log(occupied.length)

        if (occupied.length === 48) {
          form.disabled = true;
          document.getElementById('sold-out').innerText = 'SOLD OUT'
        }

      } catch (error) {

      }
    }

    getSchedule()




  </script>


  <script>
    paypal.Button.render({
      // Configure environment
      env: 'sandbox',
      client: {
        sandbox: 'AS0OYjYmD_LErfQVR-HptUpYDyRppEksv0HIXoB0ffSf1sufasjp64RCJdVkCmVDThFo9klYQQ1Ub0cL',
        production: 'demo_production_client_id'
      },
      // Customize button (optional)
      locale: 'en_US',
      style: {
        size: 'small',
        color: 'gold',
        shape: 'pill',
      },

      // Enable Pay Now checkout flow (optional)
      commit: true,

      // Set up a payment
      payment: function (data, actions) {
        return actions.payment.create({
          transactions: [{
            amount: {
              total: totalAmount,
              currency: 'PHP'
            }
          }]
        });
      },
      // Execute the payment
      onAuthorize: function (data, actions) {
        return actions.payment.execute().then(async function (data) {
          // Show a confirmation message to the buyer
          if (data && data.state == "approved") {
            const scheduleId = id
            const seats = buyingSeats
            const res = await fetch('/buy/' + id, {
              method: 'POST',
              body: JSON.stringify({ scheduleId, seats, email }),
              headers: { 'Content-Type': 'application/json' }
            })
            const data = await res.json()
            console.log(data)
            if (data.order) {
              location.assign(`/buy/confirm/${data.order}`)
            }

          }
        });
      }
    }, '#paypal-button');



  </script>
</body>

</html>